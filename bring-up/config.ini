# TT 3.5 shuttle user config file
# DEFAULT is system-wide section
# [PROJECT_NAME] is tt_um_whatever for that project
# comment out lines by starting with #
# empty values are ok, e.g.
# project = 
# will load nothing by default
# numbers can be int, float, scientific, bin or hex



#### DEFAULT Section ####

[DEFAULT]
# project: project to load by default
project = tt_um_top_mole99

# start in reset (bool)
start_in_reset = no

# mode can be any of
#  - SAFE: all RP2040 pins inputs
#  - ASIC_RP_CONTROL: TT inputs,nrst and clock driven, outputs monitored
#  - ASIC_MANUAL_INPUTS: basically same as safe, but intent is clear
mode = ASIC_RP_CONTROL

# log_level can be one of
#  - DEBUG
#  - INFO
#  - WARN
#  - ERROR
log_level = INFO


# default RP2040 system clock
rp_clock_frequency = 125e6


# force_shuttle
# by default, system attempts to figure out which ASIC is on board
# using the chip ROM.  This can be a problem if you have something
# connected to the demoboard.  If you want to bypass this step and
# manually set the shuttle, uncomment this and set the option to
# a valid shuttle
# force_shuttle = tt06


# force_demoboard
# System does its best to determine the version of demoboard 
# its running on.  Override this here, using tt0* 
# force_demoboard = tt06

#### PROJECT OVERRIDES ####


[tt_um_test]
clock_frequency = 10
start_in_reset = no
ui_in = 1

[tt_um_factory_test]
clock_frequency = 10
start_in_reset = no
ui_in = 1


[tt_um_psychogenic_neptuneproportional]
# set clock to 4kHz
clock_frequency = 4000
# clock config 4k, disp single bits
ui_in = 0b11001000
mode = ASIC_RP_CONTROL


[wokwi_7seg_tiny_tapeout_display]
rp_clock_frequency = 50_000_000
clock_frequency = 5
mode = ASIC_RP_CONTROL

[tt_um_seven_segment_seconds]
rp_clock_frequency = 120e6
clock_frequency = 10e6
ui_in = 0
mode = ASIC_RP_CONTROL




[tt_um_loopback]
# ui_in[0] == 1 means bidirs on output
clock_frequency = 1000
ui_in = 1

# uio_oe_pico, 1 bit means we will
# write to it (RP pin is output), 
# 0 means read from (RP is input)
# set to all output
uio_oe_pico = 0xff
uio_in = 0b110010101

[tt_um_vga_clock]
rp_clock_frequency = 126e6
clock_frequency = 31.5e6
mode = ASIC_RP_CONTROL


[tt_um_urish_simon]
clock_frequency = 50000
mode = ASIC_MANUAL_INPUTS


[tt_um_algofoogle_solo_squash]
mode = ASIC_RP_CONTROL

# start inactive (all ins 0)
ui_in = 0

# Ensure we are *reading* from all of the ASIC's bidir pins, 
# so bidirs all inputs:
uio_oe_pico = 0



[tt_um_psychogenic_shaman]
mode = ASIC_RP_CONTROL
clock_frequency = 1e6
# shaman uses a mix of in and out on bidir
uio_oe_pico = 0b11001100
uio_in = 0

[tt_um_top_mole99]
clock_frequency = 40e6
